#!/usr/bin/python
# -*- coding: utf-8 -*-

"""
Testcases for pyhash file

"""
import sys
import pandas as pd
import unittest
sys.path.append('../')

import pyhash


class TestHashMethods(unittest.TestCase):

    """
    Test cases for functions of text_preprocessing.preprocess module
        - remove_numbers
        - lowercase

    """

    def test_hash_str(self):
        """Summary
        """
        # load data from file:
        # including 2 fields: actual string and hash string (generated by C++)

        value = 'Runs Vtach'
        expected_h = 2154071813
        actual_h = pyhash.hash(value)
        self.assertEqual(
            actual_h, expected_h,
            msg="Hash('%s') is %s, expected: %s" % (value, actual_h,
                                                    expected_h))

    # def test_hash_file(self):
    #     """Summary
    #     """
    #     # load data from file:
    #     # including 2 fields: actual string and hash string (generated by C++)

    #     data = pd.read_csv('hash_test.txt', header=None,
    #                        names=['value', 'hash'])
    #     for _, row in data.iterrows():
    #         value = row['value'].strip()
    #         expected_h = int(row['hash'])
    #         actual_h = pyhash.hash(value)
    #         self.assertEqual(
    #             actual_h, expected_h,
    #             msg="Hash('%s') is %s, expected: %s" % (value, actual_h,
    #                                                     expected_h))


if __name__ == '__main__':
    unittest.main()
